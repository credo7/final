---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sausage-backend-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: sausage-backend
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.global.environment }}"
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app.kubernetes.io/name: sausage-backend
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  template:
    metadata:
      annotations:
        prometheus.io/path: {{ .Values.annotations.path }}
        prometheus.io/port: "{{ .Values.annotations.port }}"
        prometheus.io/scrape: "{{ .Values.annotations.scrape }}"
      labels:
        app.kubernetes.io/name: sausage-backend
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: sausage-store
        env: "{{ .Values.global.environment }}"
    spec:
      containers:
        - name: backend
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: sausage-backend-{{ .Release.Name }}-conf
                  key: postgres_uri
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: sausage-backend-{{ .Release.Name }}-conf
                  key: postgres_user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: sausage-backend-{{ .Release.Name }}-conf
                  key: postgres_password
            - name: REPORT_PATH
              valueFrom:
                configMapKeyRef:
                  name: sausage-backend-{{ .Release.Name }}-conf
                  key: report_path
            - name: LOG_PATH
              valueFrom:
                configMapKeyRef:
                  name: sausage-backend-{{ .Release.Name }}-conf
                  key: log_path
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
---
{{- if .Values.vpa.enabled }}
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: sausage-backend-{{ .Release.Name }}-vpa
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: sausage-backend
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.global.environment }}"
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: sausage-backend-{{ .Release.Name }}
  updatePolicy:
    updateMode: "{{ .Values.vpa.updateMode }}"
  resourcePolicy:
    containerPolicies:
    - containerName: backend
      minAllowed:
        cpu: {{ .Values.vpa.minAllowed.cpu }}
        memory: {{ .Values.vpa.minAllowed.memory }}
      maxAllowed:
        cpu: {{ .Values.vpa.maxAllowed.cpu }}
        memory: {{ .Values.vpa.maxAllowed.memory }}
{{- end }} 