{{- if .Values.mongodb.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-init-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: mongodb-init
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: database-init
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.global.environment }}"
  annotations:
    helm.sh/hook: "post-install"
    helm.sh/hook-weight: "5"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb-init
        app.kubernetes.io/instance: "{{ .Release.Name }}"
    spec:
      restartPolicy: OnFailure
      containers:
      - name: mongodb-init
        image: mongo:4.4
        command:
        - /bin/bash
        - -c
        - |
          # Wait for MongoDB to be ready
          until mongo --host mongodb-{{ .Release.Name }}:27017 --username {{ .Values.mongodb.env.MONGO_INITDB_ROOT_USERNAME }} --password {{ .Values.mongodb.env.MONGO_INITDB_ROOT_PASSWORD }} --authenticationDatabase admin --eval "print('MongoDB is ready')" > /dev/null 2>&1; do
            echo "Waiting for MongoDB to be ready..."
            sleep 5
          done
          
          # Create reports database and user
          mongo --host mongodb-{{ .Release.Name }}:27017 --username {{ .Values.mongodb.env.MONGO_INITDB_ROOT_USERNAME }} --password {{ .Values.mongodb.env.MONGO_INITDB_ROOT_PASSWORD }} --authenticationDatabase admin --eval '
          use reports;
          db.createUser({
            user: "reports",
            pwd: "reportspassword", 
            roles: [
              { role: "readWrite", db: "reports" }
            ]
          });
          print("Database and user created successfully");
          '
{{- end }} 