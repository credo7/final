{{- if .Values.postgresql.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-{{ .Release.Name }}-pvc
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.global.environment }}"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgresql.persistence.size }}
  {{- if .Values.postgresql.persistence.storageClass }}
  storageClassName: {{ .Values.postgresql.persistence.storageClass }}
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.global.environment }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: sausage-store
        env: "{{ .Values.global.environment }}"
    spec:
      containers:
      - name: postgresql
        image: {{ .Values.postgresql.image }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - name: postgres
          containerPort: {{ .Values.postgresql.containerPort }}
          protocol: TCP
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.env.POSTGRES_DB }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.env.POSTGRES_USER }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.env.POSTGRES_PASSWORD }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            memory: {{ .Values.postgresql.resources.requests.memory }}
            cpu: {{ .Values.postgresql.resources.requests.cpu }}
          limits:
            memory: {{ .Values.postgresql.resources.limits.memory }}
            cpu: {{ .Values.postgresql.resources.limits.cpu }}
        volumeMounts:
        - name: postgresql-storage
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U {{ .Values.postgresql.env.POSTGRES_USER }} -d {{ .Values.postgresql.env.POSTGRES_DB }} -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U {{ .Values.postgresql.env.POSTGRES_USER }} -d {{ .Values.postgresql.env.POSTGRES_DB }} -h 127.0.0.1 -p 5432
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: postgresql-storage
        persistentVolumeClaim:
          claimName: postgresql-{{ .Release.Name }}-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.global.environment }}"
spec:
  type: {{ .Values.postgresql.service.type }}
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: "{{ .Release.Name }}"
{{- end }} 