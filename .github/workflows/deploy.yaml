name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_HELM_REPO }}
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: r-devops-magistracy-project-2sem-2022036948
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  # Сборка и пуш образов в Docker Hub:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          # Получение исходного кода из репозитория:
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          # Установка сборщика контейнеров Docker:
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker Hub
          # Авторизация в Docker Hub:
          uses: docker/login-action@v2
          with:
            username: ${{ env.DOCKER_USERNAME }}
            password: ${{ env.DOCKER_PASSWORD }}
        - name: Build and push Backend to DockerHub
          # Одновременный билд и пуш образа в Docker Hub:
          uses: docker/build-push-action@v4
          with:
            context: ./backend/
            push: true
            tags: ${{ env.DOCKER_USERNAME }}/sausage-backend:latest
            build-args: |
              VERSION=${{ github.sha }}
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ env.DOCKER_USERNAME }}/sausage-frontend:latest
        - name: Push Backend-report to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend-report/
            push: true
            tags: ${{ env.DOCKER_USERNAME }}/sausage-backend-report:latest
  # Упаковываем helm-чарт и пушим его в Nexus
  add_helm_chart_to_nexus:
      name: Add Helm Chart To Nexus
      needs: build_and_push_to_docker_hub
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Set up Helm
          uses: azure/setup-helm@v3
          with:
            version: v3.12.0

        - name: Package Helm chart
          run: |
            cd sausage-store-chart
            helm dependency update
            helm package .

        - name: Push Helm chart to Nexus
          run: |
            helm plugin install https://github.com/chartmuseum/helm-push
            helm repo add chartmuseum ${{ secrets.NEXUS_HELM_REPO }} --username ${{ secrets.NEXUS_HELM_REPO_USER }} --password ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
            cd sausage-store-chart
            helm cm-push sausage-store-*.tgz chartmuseum --username="${{ env.NEXUS_HELM_REPO_USER }}" --password="${{ env.NEXUS_HELM_REPO_PASSWORD }}"

  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
      name: Deploy Helm Chart To Kubernetes
      needs: add_helm_chart_to_nexus
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
  
        - name: Set up Helm
          uses: azure/setup-helm@v3
          with:
            version: v3.12.0

        - name: Add Nexus Helm repository
          run: |
            helm repo add chartmuseum ${{ env.NEXUS_HELM_REPO }} \
              --username ${{ env.NEXUS_HELM_REPO_USER }} \
              --password ${{ env.NEXUS_HELM_REPO_PASSWORD }}
            helm repo update

        - name: Configure kubectl
          run: |
            echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
            export KUBECONFIG=kubeconfig.yaml
            chmod 600 kubeconfig.yaml

        - name: Deploy to Kubernetes
          run: |
            echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
            export KUBECONFIG=kubeconfig.yaml
            chmod 600 kubeconfig.yaml
            helm repo update
            echo "Listing available charts in repository..."
            helm search repo chartmuseum
            helm upgrade --install sausage-store chartmuseum/sausage-store \
              --namespace ${{ env.SAUSAGE_STORE_NAMESPACE }} \
              --wait --timeout=10m \
              --set global.imageRegistry=${{ env.DOCKER_USERNAME }}